Initial study of power method for a symmetrix matrix that returns dominant eigenvalue/eigenvector
current model:   		symmetric matrix.  ( tested on some symmetric matrices )
						checks for convergence
						see below for todo list.

Instructions:
In a q session. Go to k
(1) copy/paste variables.
(2) copy/paste while expression.
(3) Returns eigenvector and eigenvalue for dominant eigenvalue.


Choose a matrix 3X3 or 6x6. Dominant eigenvalue and eigenvector for the next two matrices were checked using excel.
A:((-1 2 -2);(-2 -6 3);(-2 -4 1))
A:((7  1  1  7  4  1);(4  4  4  4  4  4);(1  7  7  1  4  7);(7  1  1  7  4  1);(4  4  4  4  4  4);(1  7  7  1  4  7));
/ variables:
v:0.1,1_(#A)#0   / vector parameter used to compute eigenvalue.  See that initial value is 1/10
vN:(#A)#10     / vector parameter used to compute eigenvalue. Add code to prevent these values and 'v' from becoming too large.
el: 2          / current eigenvalue
el2: 1         / previous eigenvalue
e:0.0000001    / error limit to test if eigenvalues have converged
ev: (#A)#1     / eigenvectors for this eigenvalue
iter:1 
a:1            / boolean eigenvalues converges
b:1            / boolean iter max reached.
iterM:10000	   / iter max


while[1<a+b; vN:A(+/*)\:v;el2:el;el:(+/vN*v) % (+/v*v);ev:vN % el xexp iter;v:vN;a:e < abs(el2-el);iter+:1;b:iter < iterM];
ev:ev % sqrt(+/ev*ev);R:(ev;el);::R

///To do

1. Add code to return all eigenvalues eigenvectors.
2. Add error message that this symmetric matrix has not converged by iter max.
3. Test powermethod on various large symmetric matrix sizes. Ex: 1000x1000
4. Add code to prevent v and vN from having very large values. i.e. at some stage, v:%vN